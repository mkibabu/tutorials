 # Web apps -- sites and services

 ## The jargon is not standard, and so can get confusing. Throw in related terms
    such as 'portal', and the confusion gets worse.

 ## The term 'web app' implies that there's code in play, that the responses from a web server
    involved 'dynamic content', where 'dynamic' implies 'code generated'.

 ## Traditionally, 'web sites' are interactive, with the browser as the client application of choice.
    ### 'Web services' typically don't expect a browser as the immediate client, although a JavaScript
        app embedded in a web page displayed in browswer might be a web service client.

        Here's a depiction of the scenario, with requests and responses numbered for reference:
	

                                            generated by embedded JavaScript
                                                      /
    +---------+    request (1)   +----------+    request (3)    +---------+
    |  web    |<-----------------|    web   |------------------>|  web    |
    | server  |                  |  browser |                   | server  |
    |         |----------------->|          |<------------------|         |
    +---------+   response (2)   +----------+    response (4)   +---------+
                     /                                 \                   
       HTML document with embedded JavaScript      JSON document (JavaScript Object Notation)
       
  
 ## Traditionally, 'web sites' produce HTML documents as responses to client requests: appropriate for a browser.
    ### 'Web services' typically produce XML, JSON, plaintext, and, other document types--but not HTML.

 ## Traditionally, 'web sites' did their processing on the 'server side', with the 'client side' relegated to
    displaying a response document.
    ### 'Web service' clients typically do the heavy lifting by processing, as appropriate, the information
        extracted from a response document.

 ## Bottom line: current practice outstrips traditional jargon--yet again.
    ### In web-based applications, sites and services, the processing is typically divided between
        'client side' and 'server side' processing.

    ### The document types used for information interchange continues to evolve: XML was once the 
        format of choice in web services, but JSON nowadays has pulled even, if not ahead.

 ## When the distinction between a 'site' and a 'service' is not critical, 'web app' is a straightforward
    term to describe applications delived over HTTP(S), with a web server (usually, a cluster of these)
    on one side, and client apps (including browsers) on the other side.

 


