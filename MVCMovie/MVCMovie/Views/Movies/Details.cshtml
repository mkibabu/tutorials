@model MVCMovie.Models.Movie
<!-- 
The line above tells the view to expect an object of type Movie, which is 
strongly typed (recall that ViewBags are dynamic objects that allow late-binding)
This allows a Controller to pass a strongly-typed object (Model) to the View by
passing the object as an argument to the returned View (i.e. return View(object))
-->

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<fieldset>
    <legend>Movie</legend>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.Title)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Title)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.ReleaseDate)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.ReleaseDate)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.Genre)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Genre)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.Price)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Price)
    </div>
</fieldset>
<p>
    @Html.ActionLink("Edit", "Edit", new { id=Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
